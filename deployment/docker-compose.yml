services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    init: true
    stop_grace_period: 5s
    depends_on:
      redis:
        condition: service_healthy
      voicevox:
        condition: service_healthy
    restart: unless-stopped
    environment:
      RUST_LOG: ${RUST_LOG:-info}
      SENTRY_DSN: ${SENTRY_DSN:-}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      VOICEVOX_API_BASE: ${VOICEVOX_API_BASE:-http://voicevox:50021}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
    env_file:
      - .env

  redis:
    image: redis:7.2.3
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --save 60 1
    restart: unless-stopped
    expose:
      - 6379
    volumes:
      - "redis-data:/data"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      start_period: 1m
      start_interval: 3s

  voicevox:
    image: voicevox/voicevox_engine:cpu-ubuntu20.04-0.14.6
    restart: unless-stopped
    expose:
      - 50021
    volumes:
      - "./config/voicevox_presets.yaml:/opt/voicevox_engine/presets.yaml:ro"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "-O", "/dev/null", "http://localhost:50021/version"]
      interval: 10s
      timeout: 3s
      start_period: 1m
      start_interval: 3s

volumes:
  redis-data:
